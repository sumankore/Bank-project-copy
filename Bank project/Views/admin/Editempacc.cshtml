@model Bank_project.Models.resultviewmodel

@{ ViewBag.Title = "Editempacc"; }

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken() {

        //foreach (var items in Model.Registerview)
        for (int i = 0; i < Model.Registerviewlist.Count; i++)
        {
            <div class="form-horizontal">
                <h4>Edit Customer Details</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.Registerviewlist[i].userid)
                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Registerviewlist[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @ViewBag.Email
                        @{TempData["Email"] = ViewBag.Email;}
                        @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextBoxFor(m => m.Registerviewlist[i].DOB, @"{0:yyyy\/MM\/dd}", new { @class = "datepicker form-control" })

                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                        Male
                        @Html.RadioButtonFor(m => m.Registerviewlist[i].Gender, "Male")
                        Female
                        @Html.RadioButtonFor(m => m.Registerviewlist[i].Gender, "Female")
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].accountnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(m => m.Registerviewlist[i].accountnumber, new { htmlAttributes = new { @class = "form-control" } })
                        @ViewBag.acnum
                        @{TempData["accountid"] = ViewBag.acnum;}
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].accountnumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(m => m.Registerviewlist[i].acctype, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(m => m.Registerviewlist[i].acctype, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].acctype, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].acctypename, "Account Type", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @ViewBag.Accountype
                        @{TempData["accountype"] = ViewBag.accountype;}
                        @*@Html.DropDownListFor(model => model.acctype, new SelectList(ViewBag.acctypes, "Value", "Text"), "--select--", new { @class = "form-control" })*@
                        @Html.HiddenFor(m => m.Registerviewlist[i].acctypename, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].acctypename, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*<div class="form-group">
                        @Html.LabelFor(model => model.acctypename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.acctypename, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.acctypename, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Registerviewlist[i].mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Registerviewlist[i].aadhar, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Registerviewlist[i].aadhar, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].aadhar, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(m => m.Registerviewlist[i].bank_balance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(m => m.Registerviewlist[i].bank_balance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].bank_balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.HiddenFor(m => m.Registerviewlist[i].role, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(m => m.Registerviewlist[i].roleid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Registerviewlist[i].roleid, "", new { @class = "text-danger" })
                    </div>
                </div>

             
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>}

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>}
}
